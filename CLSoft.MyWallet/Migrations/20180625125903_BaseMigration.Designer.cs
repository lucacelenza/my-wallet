// <auto-generated />
using System;
using CLSoft.MyWallet.Data.EntityFramework.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CLSoft.MyWallet.Migrations
{
    [DbContext(typeof(MyWalletDbContext))]
    [Migration("20180625125903_BaseMigration")]
    partial class BaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.ForgotPasswordToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnName("expireson");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnName("registeredon");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnName("token")
                        .HasMaxLength(50);

                    b.Property<long>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("forgotpasswordtokens");
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnName("lastupdatedon");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnName("registeredon");

                    b.Property<long>("WalletId")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("transactions");
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasMaxLength(100);

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PasswordChangedOn")
                        .HasColumnName("passwordchangedon");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnName("registeredon");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.Wallet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnName("lastupdatedon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnName("registeredon");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("wallets");
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.ForgotPasswordToken", b =>
                {
                    b.HasOne("CLSoft.MyWallet.Data.EntityFramework.Entities.User", "User")
                        .WithMany("ForgotPasswordTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.Transaction", b =>
                {
                    b.HasOne("CLSoft.MyWallet.Data.EntityFramework.Entities.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CLSoft.MyWallet.Data.EntityFramework.Entities.Wallet", b =>
                {
                    b.HasOne("CLSoft.MyWallet.Data.EntityFramework.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
